{"version":3,"file":"debug-composer.mjs","sources":["../src/logger.js","../src/debugTools.js","../src/index.js"],"sourcesContent":["import debug from 'debug';\n\nconst createTooler = (namespace, debugInstances) => {\n  const timestamps = {};\n  return {\n    time(name, log = false) {\n      timestamps[name] = performance.now();\n      if (log) {\n        if (!debugInstances[`${namespace}:time`]) {\n          debugInstances[`${namespace}:time`] = debug(`${namespace}:time`);\n        }\n        debugInstances[`${namespace}:time`](`${name}: ${timestamps[name]}ms`);\n      }\n      return performance.now();\n    },\n    timeEnd(name, log = true) {\n      let time = performance.now();\n      if (timestamps[name]) {\n        time = time - timestamps[name];\n      }\n      if (log) {\n        if (!debugInstances[`${namespace}:time`]) {\n          debugInstances[`${namespace}:time`] = debug(`${namespace}:time`);\n        }\n        debugInstances[`${namespace}:time`](`${name}: ${time}ms`);\n      }\n      return time;\n    },\n    testPerformance(cb, times = 1, log = true) {\n      let time = 0;\n      if (times === 1) {\n        time = performance.now();\n        cb();\n        time = performance.now() - time;\n      } else {\n        time = performance.now();\n        for (let i = 0; i <= times; i++) {\n          cb();\n        }\n        time = performance.now() - time;\n      }\n      if (log) {\n        if (!debugInstances[`${namespace}:performance`]) {\n          debugInstances[`${namespace}:performance`] = debug(`${namespace}:performance`);\n        }\n        debugInstances[`${namespace}:performance`](\n          `Function triggered ${times === 1 ? 'once' : `${times} times`}. Measured time: ${time}ms`\n        );\n      }\n\n      return time;\n    },\n    stacktrace(asObject = false) {\n      let trace = (new Error()).stack.split('\\n').reverse().slice(0, -2).reverse();\n      const regexp = new RegExp(/at ([\\w.]*) \\((<?.*?>?)\\??:(\\d*):(\\d*)\\)/);\n      trace = trace.map(el => {\n        const matched = regexp.exec(el);\n        if (matched) {\n          if (asObject) {\n            return {\n              method: matched[1],\n              file: matched[2].split('/').pop(),\n              line: parseInt(matched[3]),\n              column: parseInt(matched[4]),\n              filePath: matched[2],\n              trace: el,\n            };\n          }\n          return `${matched[1]} in '${matched[2].split('/').pop()}' at ${matched[3]}:${matched[4]}`;\n        }\n        if (asObject) {\n          return {\n            traceEl: el,\n          };\n        }\n        return el;\n      });\n      return trace;\n    },\n  };\n};\n\nconst createLogger = (namespace, addToGlobals = false) => {\n  const debugInstances = {};\n  const tooler = createTooler(namespace, debugInstances);\n\n  const logger = {\n    ...tooler,\n    log: debug(`${namespace}:log`),\n    info: debug(`${namespace}:info`),\n    warn: debug(`${namespace}:warn`),\n    error: debug(`${namespace}:error`),\n    debug: debug(`${namespace}:debug`),\n    add: name => {\n      if (Array.isArray(name)) {\n        return name.forEach(name => logger[name] = debug(`${namespace}:${name}`));\n      }\n      return logger[name] = debug(`${namespace}:${name}`);\n    },\n  };\n\n  const globalName = typeof addToGlobals === 'string' ? addToGlobals : 'logger';\n  if (addToGlobals) {\n    if (typeof window !== 'undefined') {\n      window[globalName] = logger;\n    } else if (typeof global !== 'undefined') {\n      global[globalName] = logger;\n    } else {\n      console.warn('debug-composer:warn', 'Could not find neither window nor global object to add logger to'); // eslint-disable-line no-console\n    }\n  }\n  return logger;\n};\n\nexport default createLogger;\n","import _ from 'lodash';\nimport createLogger from './logger';\n\nconst logger = createLogger('debug-composer');\n\nconst debugTools = {\n  /**\n   * Gets debug settings from localStorage\n   * @return {string} debug settings\n   */\n  getFromLocalStorage() {\n    if (typeof localStorage !== 'undefined') {\n      return localStorage.getItem('debug');\n    }\n    return '';\n  },\n\n  /**\n   * Sets debug settings to localStorage\n   * @param {string} value debug settings as string\n   */\n  setToLocalStorage(value) {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem('debug', value);\n    }\n  },\n\n  /**\n   * Clear debug options in localStorage\n   */\n  clearLocalStorage() {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.removeItem('debug');\n    }\n  },\n\n  /**\n   * Sets provided settings as string to localStorage\n   * @param {object} settings - debug settings as js object\n   * @param {string|number} env - debug settings level to env (the same as index in settings object to be set)\n   */\n  configureDebugger(settings, env = 'default') {\n    const envProvided = arguments.length > 1;\n    let settingsToApply = settings;\n\n    if (typeof settings !== 'object') {\n      throw new Error(`Expected an object provided as the first argument to configureDebugger function. ${typeof settings} found instead.`);\n    }\n\n    // checking if we got env = undefined or we did not get env at all\n    if (envProvided) {\n      if (!settings[env]) {\n        throw new Error(`Key ${env} not found in settings file provided to configureDebugger method. As a second argument you must provide index from settings object`);\n      }\n      if (typeof settings[env] !== 'object') {\n        throw new Error(`Expected settings.${env} to be an object. ${typeof settings[env]} found instead`);\n      }\n      settingsToApply = settings[env];\n    }\n\n    if (typeof window === 'undefined' || typeof localStorage === 'undefined') {\n      logger.warn('It seems that you are using configureDebugger method in node.js or in outdated browser. It will not work as it needs browser environment with localStorage available.');\n    }\n\n    logger.info(envProvided ? `Setting debug for ${env}` : 'Setting debug');\n\n    let options = debugTools.getDebugOptionsObject(debugTools.getFromLocalStorage());\n    _.forEach(settingsToApply, (level, namespace) => {\n      options = debugTools.changeDebugOption(level)(options, namespace);\n    });\n    debugTools.setToLocalStorage(debugTools.getDebugOptionsString(options));\n  },\n\n  /**\n   * Converts debugString (as saved in localStorage) to object\n   * @param {object} debugString - debug settings string\n   * @return {object} debug setting object\n   */\n  getDebugOptionsObject(debugString) {\n    if (!debugString) {\n      return {};\n    }\n    let options = debugString;\n    options = _.map(options.split(','), el => el.split(';'));\n    options = _.flatten(options);\n    options = _.reduce(options, (accu, val) => {\n      const enabled = val.indexOf('-') !== 0;\n      const split = val.replace(/^-/, '').split(':');\n      if (!accu[split[0]]) {\n        accu[split[0]] = {};\n      }\n      if (split.length === 2) {\n        accu[split[0]][split[1]] = enabled;\n      } else {\n        accu[split[0]]._default = enabled;\n      }\n      return accu;\n    }, {});\n    return options;\n  },\n\n  /**\n   * Converts debugOptions object to string that can be saved to localStorage\n   * @param {object} optionsObject - debug options as object\n   * @return {string} optionsString - debug options as string\n   */\n  getDebugOptionsString(optionsObject) {\n    let options = optionsObject;\n    options = _.reduce(options, (accu, namespaceOptions, namespaceName) => {\n      _.forEach(namespaceOptions, (namespaceOption, subNamespaceName) => {\n        if (subNamespaceName === '_default') {\n          accu.push(`${namespaceOption ? '' : '-'}${namespaceName}`);\n        } else {\n          accu.push(`${namespaceOption ? '' : '-'}${namespaceName}:${subNamespaceName}`);\n        }\n      });\n      return accu;\n    }, []);\n    return options.join(',');\n  },\n\n  /**\n   * Returns the function that enable or disable (based on enable parameter) given namespace in optionsObject and returns that object\n   * @param {boolean} enable flag that indicates if returned function should enable or disable namespaces\n   * @return {function} function to be used for disabling/enabling namespaces\n   */\n  changeDebugOption(enable) {\n    /**\n     * Function to be used for disabling/enabling namespaces\n     * @param {object} optionsObject - debug options to be edited (as JS object)\n     * @param {string} namespace - namespace to be enabled/disabled (e.g. 'socket.io-client' or 'mi18n-redux:info')\n     * @param {number} level - if set to 0 and provided with outer namespace (like 'debug' and not 'debug:warning') the namespace with asterisk (e.g. 'debug:*') will be added as well\n     * @return {object} new optionsObject - modified debug options as js object\n     */\n    return (optionsObject, namespace, level = 0) => {\n      const splitNamespace = namespace.split(':');\n      let newOptions = {\n        ...optionsObject,\n      };\n\n      if (splitNamespace.length === 1) {\n        // console.log('length=1', splitNamespace, enable, newOptions);\n        if (namespace === '*') {\n          if (enable) {\n            newOptions = {\n              ...newOptions,\n              '*': { _default: true },\n            };\n            // console.log('length=1 *', splitNamespace, enable, newOptions);\n          } else {\n            delete newOptions['*'];\n          }\n        } else if (level === 0) {\n          newOptions = {\n            ...newOptions,\n            [splitNamespace[0]]: { _default: enable, '*': enable },\n          };\n        } else {\n          newOptions = {\n            ...newOptions,\n            [splitNamespace[0]]: {\n              ...newOptions[splitNamespace[0]],\n              _default: enable,\n            },\n          };\n        }\n      } else {\n        // console.log('length!=1', newOptions[splitNamespace[0]]);\n        newOptions = {\n          ...newOptions,\n          [splitNamespace[0]]: {\n            ...newOptions[splitNamespace[0]],\n            [splitNamespace[1]]: enable,\n          },\n        };\n        // console.log('length!=1', splitNamespace, enable, newOptions);\n      }\n      return newOptions;\n    };\n  },\n\n  /**\n   * Enables given namespace (with saving to localStorage)\n   * @param {string} namespace - namespace to be enabled\n   * @param {number} level - if set to 0 and provided with outer namespace (like 'debug' and not 'debug:warning') the namespace with asterisk (e.g. 'debug:*') will be added as well\n   * @return {void}\n   */\n  enableDebug(namespace = '*', level = 0) {\n    const debugOptions = debugTools.getDebugOptionsObject(debugTools.getFromLocalStorage());\n    const modifiedDebugOptions = debugTools.changeDebugOption(true)(debugOptions, namespace, level);\n    debugTools.setToLocalStorage(debugTools.getDebugOptionsString(modifiedDebugOptions));\n  },\n\n  /**\n   * Disables given namespace (with saving to localStorage)\n   * @param {string} namespace - namespace to be disabled\n   * @param {number} level - if set to 0 and provided with outer namespace (like 'debug' and not 'debug:warning') the namespace with asterisk (e.g. 'debug:*') will be added as well\n   * @return {void}\n   */\n  disableDebug(namespace = '*', level = 0) {\n    const debugOptions = debugTools.getDebugOptionsObject(debugTools.getFromLocalStorage());\n    const modifiedDebugOptions = debugTools.changeDebugOption(false)(debugOptions, namespace, level);\n    debugTools.setToLocalStorage(debugTools.getDebugOptionsString(modifiedDebugOptions));\n  },\n\n  /**\n   * Returns current debug options from localStorage\n   * @return {object} debug options as JS object\n   */\n  getDebugOptions() {\n    return this.getDebugOptionsObject(localStorage.getItem('debug'));\n  },\n};\n\nexport default debugTools;\n","import debugToolsImp from './debugTools';\nimport createLogger from './logger';\n\nexport const debugTools = debugToolsImp;\nexport const configureDebugger = debugTools.configureDebugger;\nexport const resetDebugger = debugTools.clearLocalStorage;\nexport default createLogger;\n"],"names":["createTooler","namespace","debugInstances","timestamps","name","log","performance","now","debug","time","cb","times","i","asObject","trace","Error","stack","split","reverse","slice","regexp","RegExp","map","matched","exec","el","pop","parseInt","createLogger","addToGlobals","tooler","logger","Array","isArray","forEach","globalName","window","global","warn","debugTools","localStorage","getItem","value","setItem","removeItem","settings","env","envProvided","arguments","length","settingsToApply","babelHelpers.typeof","info","options","getDebugOptionsObject","getFromLocalStorage","level","changeDebugOption","setToLocalStorage","getDebugOptionsString","debugString","_","flatten","reduce","accu","val","enabled","indexOf","replace","_default","optionsObject","namespaceOptions","namespaceName","namespaceOption","subNamespaceName","push","join","enable","splitNamespace","newOptions","debugOptions","modifiedDebugOptions","debugToolsImp","configureDebugger","resetDebugger","clearLocalStorage"],"mappings":"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"}